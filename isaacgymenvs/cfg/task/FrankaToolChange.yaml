# used to create the object
name: FrankaToolChange

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym. 
env:
  numEnvs: ${resolve_default:2,${...num_envs}}
  # numObservations: 32
  # numActions: 12
  envSpacing: 1.5
  episodeLength: 512
  enableDebugVis: False
  skip: 40  # let the tool settle

  clipObservations: 5.0
  clipActions: 1.0

  frankaDofNoise: 0.25

  aggregateMode: 0
  
  distRewardScale: 100
  alignRewardScale: 100
  torquePenaltyScale: 0.01
  timePenaltyScale: 0.001
  knockoffThresholdNorm: 0.3
  knockoffPenalty: 100
  attachThresholdNorm: 0.005
  attachReward: 100
  concludeReward: 0.1

  # in tool frame, xyz
  relativeAttachPose: [-0.00312, 0, 0.09317, 0, 0, 0, 1]

  robotBasePositionNoise: 0.0
  robotBaseRotationNoise: 0.0
  frankaDofPositionNoise: 0.0
  toolPostionNoise: 0.0
  toolRotationNoise: 0.0

  # scale factor for all actions given by the model, must be less than 1
  # to ensure not to exceed action limit
  actionScale: 0.2

  controlType: osc  # options are {osc, ik, joint_torque}
  kp: [150, 150, 150, 150, 150, 150]
  # kd: 24.5  # 2.0 * np.sqrt(kp)
  kp_null: [10, 10, 10, 10, 10, 10, 10]
  # kd_null: 6.3  # 2.0 * np.sqrt(kp_null)
  # model output action is re-scaled using the full limit
  # for OSC and IK controllers only which use model-output dpose action
  poseActionLimit: [0.1, 0.1, 0.1, 0.5, 0.5, 0.5]

  damping: 0.05  # for IK

  asset:
    assetRoot: "../../assets"

    assetFileNameRobot: "urdf/dexai/alfred.urdf"
    robotArmature: 0.01
    robotDofStiffnessOSC: [5000, 5000, 400, 400, 400, 400, 400, 400, 400]
    robotDofDampingOSC: [100, 100, 40, 40, 40, 40, 40, 40, 40]
    frobotDofStiffnessIK: [5000, 5000, 400, 400, 400, 400, 400, 400, 400]
    robotDofDampingIK: [100, 100, 40, 40, 40, 40, 40, 40, 40]

    assetFileNameWorkstation: "urdf/dexai/alfred_workstation.urdf"

    assetFileNameDisher2oz: "urdf/dexai/disher_2oz.urdf"
    # assetFileNameDisher2oz: "urdf/objects/ball.urdf"

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

# 3rd [0.33, 0.53, 0.152]
# 6th [0.16, 0.174, 0.152]
tools:
  - tool_id: tool_disher_2oz_hotel_pan_sixth_6in_024
    start_dof_pos: [0.9414, -2.09, 0.2787, -0.5150, -2.7638, -2.0193, 0.1854, 2.0644, -0.0464]
    bin_dims: [0.16, 0.174, 0.152]
    initial_pose: [0.2949, -0.3677, 0.0041, -0.5568, 0.7465, 0.2364, 0.2777]

sim:
  dt: 0.01667 # 1/60
  substeps: 4
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"cpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: 1
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 64
    num_velocity_iterations: 1
    contact_offset: 0.001
    rest_offset: 0.0
    friction_offset_threshold: 0.01
    friction_correlation_distance: 0.0005
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 1048576 # 1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 2 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)

task:
  randomize: False
